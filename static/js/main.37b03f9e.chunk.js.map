{"version":3,"sources":["components/Preloader/Preloader.module.css","api/api.js","components/CurrencyInput/CurrencyInput.js","assets/images/preloader.svg","components/Preloader/Preloader.js","App.js","index.js"],"names":["module","exports","API_KEY","instance","axios","create","baseURL","currencyAPI","get","then","response","data","firstCurrency","secondCurrency","CurrencyInput","props","currencyOptions","selectedCurrency","onChangeCurrency","amount","onChangeAmount","selectedCurrencyForReactSelect","value","label","className","src","alt","options","map","option","type","onChange","placeholder","Preloader","classes","preloader","App","firstAmount","secondAmount","useState","setCurrencyOptions","setFirstCurrency","setSecondCurrency","exchangeRate","setExchangeRate","setAmount","amountFromFirstCurrency","setAmountFromFirstCurrency","initialized","setInitialized","Math","floor","useEffect","a","Object","keys","conversion_rates","getApiData","conversion_rate","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37b03f9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3r6Rz\"};","import axios from \"axios\";\r\n\r\nconst API_KEY = \"0c728bc6e663d076e5206e01\"\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://v6.exchangerate-api.com/v6'\r\n})\r\n\r\nexport const currencyAPI = {\r\n  getCurrency() {\r\n    return instance.get(`/${API_KEY}/latest/USD`)\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n  },\r\n  getExchangeRate(firstCurrency, secondCurrency) {\r\n    return instance.get(`/${API_KEY}/pair/${firstCurrency}/${secondCurrency}`)\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n  }\r\n}","import React from 'react'\nimport Select from 'react-select';\nimport './CurrencyInput.css'\n\nconst CurrencyInput = (props) => {\n  const { currencyOptions, selectedCurrency, onChangeCurrency, amount, onChangeAmount } = props\n\n  const selectedCurrencyForReactSelect = { value: selectedCurrency, label: <div className='label'><div>{selectedCurrency}</div><img src={`./img/flags/${selectedCurrency}.png`} alt='flag' /></div> }\n\n  // const optionElements = currencyOptions.map(option => <option key={option} value={option}>{option}</option>)\n  const options = currencyOptions.map(option => {\n    return {\n      value: option, label: <div className='label'> <div >{option}</div> <img src={`./img/flags/${option}.png`} alt='flag' /></div >\n    }\n  })\n\n  return (\n    <>\n      <fieldset className='CurrencyInputContainer'>\n        <input className='CurrencyInput' type='number' value={amount} onChange={onChangeAmount} placeholder='0' />\n        {/* <select value={selectedCurrency} onChange={onChangeCurrency}>\n          {optionElements}\n        </select> */}\n        <Select\n          className='currencySelect'\n          value={selectedCurrencyForReactSelect}\n          onChange={onChangeCurrency}\n          options={options}\n        />\n      </fieldset>\n\n\n    </>\n  )\n}\n\nexport default CurrencyInput\n","export default __webpack_public_path__ + \"static/media/preloader.5788b05c.svg\";","import React from 'react'\nimport classes from './Preloader.module.css'\nimport preloader from '../../assets/images/preloader.svg'\n\nconst Preloader = () => {\n  return (\n    <img className={classes.preloader} src={preloader} alt='preloader' />\n  )\n}\n\nexport default Preloader;\n","import React, { useEffect, useState } from \"react\";\nimport { currencyAPI } from \"./api/api\";\nimport CurrencyInput from \"./components/CurrencyInput/CurrencyInput\";\nimport Preloader from \"./components/Preloader/Preloader\";\n\nconst App = () => {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [firstCurrency, setFirstCurrency] = useState()\n  const [secondCurrency, setSecondCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState()\n  const [amountFromFirstCurrency, setAmountFromFirstCurrency] = useState(true)\n  const [initialized, setInitialized] = useState(false)\n\n\n  let firstAmount, secondAmount\n  if (amountFromFirstCurrency) {\n    firstAmount = Math.floor(amount * 100) / 100\n    secondAmount = Math.floor((amount * exchangeRate) * 100) / 100\n  } else {\n    secondAmount = Math.floor(amount * 100) / 100\n    firstAmount = Math.floor((amount / exchangeRate) * 100) / 100\n  }\n\n  useEffect(() => {\n    async function getApiData() {\n      const response = await currencyAPI.getCurrency()\n      setCurrencyOptions([...Object.keys(response.conversion_rates)])\n      setFirstCurrency(Object.keys(response.conversion_rates)[0])\n      setSecondCurrency(Object.keys(response.conversion_rates)[1])\n      setExchangeRate(response.conversion_rates[Object.keys(response.conversion_rates)[1]])\n      setInitialized(true)\n    }\n    getApiData()\n  }, [])\n\n  useEffect(() => {\n    if (firstCurrency && secondCurrency) {\n      async function getApiData() {\n        const response = await currencyAPI.getExchangeRate(firstCurrency, secondCurrency)\n        setExchangeRate(response.conversion_rate)\n      }\n      getApiData()\n    }\n  }, [firstCurrency, secondCurrency])\n\n  const onChangeFirstCurrency = (e) => {\n    setFirstCurrency(e.value)\n  }\n\n  const onChangeSecondCurrency = (e) => {\n    setSecondCurrency(e.value)\n  }\n\n  const onChangeFirstAmount = (e) => {\n    setAmount(e.target.value)\n    setAmountFromFirstCurrency(true)\n  }\n\n  const onChangeSecondAmount = (e) => {\n    setAmount(e.target.value)\n    setAmountFromFirstCurrency(false)\n  }\n\n  if (!initialized) {\n    return <Preloader />\n  }\n\n  return (\n    <div className=\"App\">\n      <CurrencyInput\n        currencyOptions={currencyOptions}\n        selectedCurrency={firstCurrency}\n        onChangeCurrency={onChangeFirstCurrency}\n        amount={firstAmount}\n        onChangeAmount={onChangeFirstAmount}\n      />\n      <CurrencyInput\n        currencyOptions={currencyOptions}\n        selectedCurrency={secondCurrency}\n        onChangeCurrency={onChangeSecondCurrency}\n        amount={secondAmount}\n        onChangeAmount={onChangeSecondAmount}\n      />\n    </div>\n  )\n}\n\nexport default App;\n\n  // useEffect(() => {\n  //   currencyAPI.getCurrency()\n  //     .then(response => {\n  //       setCurrencyOptions([response.base, ...Object.keys(response.rates)])\n  //     })\n  // }, [])\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}